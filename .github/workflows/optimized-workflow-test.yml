name: Optimized Workflow - UNDONE
on:
    workflow_dispatch:
env:
    URL: ${{ vars.URL }}
    USERNAME: ${{ vars.USERNAME }}
    PASSWORD: ${{vars.PASSWORD}}
    EMAIL: ${{ vars.EMAIL }}
jobs:
    test_setup:
        runs-on: WINDOWS10HOST
        steps:
        - name: Checkout Repository # name: Custom name for the step 
          uses: actions/checkout@v3 # uses: Use a pre-built action
        # - name: Simulate Failure in test_setup job
        #   run: |
        #       echo "Running job1"
        #       # Simulate a failure or success
        #       exit 0  # Change to exit 1 to simulate failure
        - name: Install dependencies
          run: npm ci
        - name: Install Playwright Browsers
          run: npx playwright install --with-deps
        
        
    smoke_tests:
        runs-on: WINDOWS10HOST
        # needs: test_setup
        # if: ${{ needs.test_setup.result == 'success' || always() }}
        # needs: test_setup
        # if: ${{ needs.test_setup.result == 'success' }}
        needs:
            - test_setup
         if: ${{ needs.test_setup.result == 'success' }}
        steps:
        # - name: Checkout Repository # name: Custom name for the step 
        #   uses: actions/checkout@v3 # uses: Use a pre-built action
        # - name: Install dependencies
        #   run: npm ci
        # - name: Install Playwright Browsers
        #   run: npx playwright install --with-deps
        - name: Run Smoke tests
          run: npx playwright test smoke/ --config github.config.js
        - uses: actions/upload-artifact@v3
          if: always()
          with:
            name: smoke-report
            path: playwright-report/
            retention-days: 1
    sanity_tests:
        runs-on: WINDOWS10HOST
        # needs: smoke_tests
        # needs: test_setup
        # if: always() 
        # if: ${{ needs.smoke_tests.result == 'success' }}
        # needs: smoke_tests
        # if: ${{ needs.test_setup.result == 'success' || always() }}
        # needs: smoke_tests
        # if: ${{ needs.smoke_tests.result == 'success' || needs.smoke_tests.result == 'failure' }}
        needs: 
            - test_setup
            - smoke_tests
        # if: always()
        if: ${{ needs.test_setup.result == 'success' && (needs.smoke_test.result == 'success' || needs.smoke_test.result == 'failure')}}
        steps:
        # - name: Checkout Repository # name: Custom name for the step 
        #   uses: actions/checkout@v3 # uses: Use a pre-built action
        # - name: Install dependencies
        #   run: npm ci
        # - name: Install Playwright Browsers
        #   run: npx playwright install --with-deps
        - name: Run Sanity tests
          run: npx playwright test sanity/ --config github.config.js
        - uses: actions/upload-artifact@v3
          if: always()
          with:
            name: sanity-report
            path: playwright-report/
            retention-days: 1

    regression_tests:
        runs-on: WINDOWS10HOST
        # needs: sanity_tests
        # needs: test_setup
        # if: always() 
        # if: ${{ needs.sanity_tests.result == 'success' }}
        # needs: sanity_tests
        # if: ${{ needs.test_setup.result == 'success' || always() }}
        # needs: sanity_tests
        # if: ${{ needs.sanity_tests.result == 'success' || needs.sanity_tests.result == 'failure' }}
        needs: 
            - test_setup
            - sanity_tests
        # if: always()
        if: ${{ needs.test_setup.result == 'success' && (needs.sanity_test.result == 'success' || needs.sanity_test.result == 'failure')}}
        steps:
        # - name: Checkout Repository # name: Custom name for the step 
        #   uses: actions/checkout@v3 # uses: Use a pre-built action
        # - name: Install dependencies
        #   run: npm ci
        # - name: Install Playwright Browsers
        #   run: npx playwright install --with-deps
        - name: Run Regression tests
          run: npx playwright test regression/ --config github.config.js
        - uses: actions/upload-artifact@v3
          if: always()
          with:
            name: regression-report
            path: playwright-report/
            retention-days: 1


        
